#!/usr/bin/perl

###############################################################################
# This file is part of Ásbrú Connection Manager
#
# Copyright (C) 2017-2019 Ásbrú Connection Manager team (https://asbru-cm.net)
# Copyright (C) 2010-2016 David Torrejon Vaquerizas
#
# Ásbrú Connection Manager is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Ásbrú Connection Manager is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License version 3
# along with Ásbrú Connection Manager.
# If not, see <http://www.gnu.org/licenses/gpl-3.0.html>.
###############################################################################

$|++;

BEGIN {
    if (grep({ /^-{1,2}(help|h)$/gi } @ARGV)) {
        print "\n";
        print "Usage: $0 [options]\n";
        print "Options:\n";
        print "\t--help : show this message\n";
        print "\t--no-backup : do no create alternative config files as a backup (faster shutdown)\n";
        print "\t--start-shell : start a local terminal\n";
        print "\t--password=<pwd> : automatically logon with given password without prompting user\n";
        print "\t--start-uuid=<uuid>[:<cluster] : start connection in cluster (if given)\n";
        print "\t--edit-uuid=<uuid> : edit connection\n";
        print "\t--dump-uuid=<uuid> : dump data for given connection\n";
        print "\t--scripts : open scripts window\n";
        print "\t--start-script=<script> : start given script\n";
        print "\t--preferences : open global preferences dialog\n";
        print "\t--quick-conn : open the Quick Connect dialog on startup\n";
        print "\t--list-uuids : list existing connections/groups and their UUIDs\n";
        print "\t--no-splash : no splash screen on startup\n";
        print "\t--iconified : go to tray once started\n";
        print "\t--readonly : start in read only mode (no config changes allowed)\n";
        print "\n";
        print "See 'man asbru' for additional information.\n";
        print "\n";
        exit 0;
    }
}

###################################################################
# START: Import Modules

use FindBin qw ($RealBin $Bin $Script);
use lib "$RealBin/lib", "$RealBin/lib/ex", "$RealBin/lib/edit";
use File::Copy;

# Standard
use strict;
use warnings;

# END: Import Modules
###################################################################

###################################################################
# START: Define GLOBAL variables
our $INIT_CFG_FILE  = "$RealBin/res/pac.yml";
our $CFG_DIR        = "$ENV{'HOME'}/.config/pac";
our $CFG_DIR_OLD    = "";
our $CFG_FILE       = "$CFG_DIR/pac.cfg";
our $ASBRU;
# END: Define GLOBAL variables
###################################################################

###################################################################

# START: MAIN program
# Load PACMain now, so it can read the global $CFG_DIR

eval "use PACMain";

print "INFO: Ásbrú started ($Script) with PID $$\n";

# Check for Unity's systray-whitelist presence of 'asbru'
my $wl = `gsettings get com.canonical.Unity.Panel systray-whitelist 2>/dev/null`;
chomp $wl;

if (($? eq 0) && (!grep(/'asbru'/, $wl))) {
    print "INFO: Adding 'asbru' to Unity's 'systray-whitelist'\n";
    $wl =~ s/'\s*]/', 'asbru']/;
    `gsettings set com.canonical.Unity.Panel systray-whitelist "$wl"`;
}

# Set up configuration directories

# Create config dir if necessary
if (!-d "$ENV{'HOME'}/.config") {
    mkdir( "$ENV{'HOME'}/.config" );
}

# Create Asbru config dir if necessary
if (!-d $CFG_DIR) {
    mkdir($CFG_DIR);
}

# Code for future configuration migrations when needed
if (($CFG_DIR_OLD) && ($CFG_DIR_OLD ne $CFG_DIR)) {
    config_migration($CFG_DIR_OLD,$CFG_DIR);
}

# Create all subdirectories
foreach my $subdir ('autostart','screenshots','session_logs','scripts','sockets','tmp') {
    if (!-d "$CFG_DIR/$subdir") {
        mkdir("$CFG_DIR/$subdir");
    }
}

# Copy sample files if they do not exist
for (my $n = 1; $n < 5; $n++) {
    if ((!-e "$CFG_DIR/scripts/sample$n.pl") && (-e "$RealBin/res/sample$n.pl")) {
        copy("$RealBin/res/sample$n.pl", "$CFG_DIR/scripts/");
    }
}

# Start Àsbrú Connection Manager :)
if (!($ASBRU = PACMain -> new(@ARGV))) {
    print STDERR "WARN: Ásbrú aborted.\n";
    exit 0
}

$ASBRU->start;

print "INFO: Finished $Script (PID:$$)...\n";
exit 0;

# Implemented when necessary
sub config_migration {
    return 0;
}

# END: MAIN program
###################################################################

__END__

=encoding utf8

=head1 NAME

asbru-cm

=head1 SYNOPSYS

asbru-cm [options]

B<Options>

    --help : show this message
    --no-backup : do no create alternative config files as a backup (faster shutdown)
    --start-shell : start a local terminal
    --password=<pwd> : automatically logon with given password without prompting user
    --start-uuid=<uuid>[:<cluster] : start connection in cluster (if given)
    --edit-uuid=<uuid> : edit connection
    --dump-uuid=<uuid> : dump data for given connection
    --scripts : open scripts window
    --start-script=<script> : start given script
    --preferences : open global preferences dialog
    --quick-conn : open the Quick Connect dialog on startup
    --list-uuids : list existing connections/groups and their UUIDs
    --no-splash : no splash screen on startup
    --iconified : go to tray once started
    --readonly : start in read only mode (no config changes allowed)

=head1 DESCRIPTION

=head2 Global Variables

I<$CFG_DIR>    Setup your configuration directory here.

You may run different versions of Ásbru and each have different configuration settings and connections.

=head2 Functions

C<sub config_migration> (no parameters) (no return values)

Function normally empty unless there is a migration of the configuration files.

